<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ptms.mvc.tpj.TrainerDAO.TrainerDAO">
	<!-- 훈련사 프로필 테이블 등록 -->
	<insert id="insertTrainer" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		INSERT INTO TRAINER_TB(TA_CD, CUST_ID, TA_TITLE, TA_APPEAL, TA_IMG, TA_ST, TA_DT)
		VALUES(TA_CD_seq.nextval, #{CUST_ID}, #{TA_TITLE}, #{TA_APPEAL}, #{TA_IMG}, 1, sysdate)
	</insert>
	
	<!-- 훈련사 상세정보 테이블 등록 -->
	<insert id="insertTrainerDetail" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		INSERT INTO TRAINER_SERVICE_TB(TS_CD, TA_CD, TS_AREA, TS1_NO, TS1_FEE, TS2_NO, TS2_FEE, TS3_NO, TS3_FEE, TS4_NO, TS4_FEE, START_DAY, END_DAY, ADJUSTABLE)
		VALUES(TS_CD_seq.nextval, TA_CD_seq.currval, #{TS_AREA}, #{TS1_NO}, #{TS1_FEE}, #{TS2_NO}, #{TS2_FEE}, #{TS3_NO}, #{TS3_FEE}, #{TS4_NO}, #{TS4_FEE}, #{START_DAY}, #{END_DAY}, #{ADJUSTABLE})
	</insert>
	
	<!-- 조건을 충족한 훈련사 리스트 건수 -->
	<select id="trainerSelectCnt" parameterType="java.util.Map" resultType="int">
		<if test='ADJUSTABLE == 1'>
			select count(*)
			from (select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		            and ct.CUST_ID = tt.CUST_ID
		            and ts.TS_AREA LIKE '%'||#{TQ_LOC}||'%'
		            and tt.TA_ST = 1
		            AND #{id} NOT IN tt.CUST_ID
		            intersect
		            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		            and ct.CUST_ID = tt.CUST_ID
		            and #{TQ_AMT} = ts.TS1_NO
		            OR #{TQ_AMT} = ts.TS2_NO
		            OR #{TQ_AMT} = ts.TS3_NO
		            OR #{TQ_AMT} = ts.TS4_NO
		            intersect
		            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		              and ct.CUST_ID = tt.CUST_ID
		              and #{START_DAY} between ts.START_DAY and ts.END_DAY
		              or #{END_DAY} between ts.START_DAY and ts.END_DAY)
		</if>
		
		<if test='ADJUSTABLE != 1'>
			select count(*)
			from (select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		            and ct.CUST_ID = tt.CUST_ID
		            and ts.TS_AREA LIKE '%'||#{TQ_LOC}||'%'
		            and tt.TA_ST = 1
		            AND #{id} NOT IN tt.CUST_ID
		            intersect
		            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		            and ct.CUST_ID = tt.CUST_ID
		            and #{TQ_AMT} = ts.TS1_NO
		            OR #{TQ_AMT} = ts.TS2_NO
		            OR #{TQ_AMT} = ts.TS3_NO
		            OR #{TQ_AMT} = ts.TS4_NO
		            intersect
		            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
		            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
		            where tt.TA_CD = ts.TA_CD
		              and ct.CUST_ID = tt.CUST_ID
		              and #{START_DAY} between ts.START_DAY and ts.END_DAY
		              or #{END_DAY} between ts.START_DAY and ts.END_DAY)
		</if>
	</select>
	
	<!-- 조건을 충족한 훈련사 리스트 -->
	<select id="trainerList" parameterType="java.util.Map" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		<if test='ADJUSTABLE == 1'>
			<![CDATA[
			select * 
			from
			(select ts_cd, ta_cd, ts_area, ts1_no, ts1_fee, ts2_no, ts2_fee, ts3_no, ts3_fee, ts4_no, ts4_fee, start_day, end_day, ADJUSTABLE, TA_TITLE, TA_APPEAL, TA_IMG, CUST_NM, ROWNUM rNUM
			    from (select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			            and ct.CUST_ID = tt.CUST_ID
			            and ts.TS_AREA LIKE '%'||#{TQ_LOC}||'%'
			            and tt.TA_ST = 1
			            AND #{id} NOT IN tt.CUST_ID
			            intersect
			            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			            and ct.CUST_ID = tt.CUST_ID
			            and #{TQ_AMT} = ts.TS1_NO
			            OR #{TQ_AMT} = ts.TS2_NO
			            OR #{TQ_AMT} = ts.TS3_NO
			            OR #{TQ_AMT} = ts.TS4_NO
			            intersect
			            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			              and ct.CUST_ID = tt.CUST_ID
			              and #{START_DAY} between ts.START_DAY and ts.END_DAY
			              or #{END_DAY} between ts.START_DAY and ts.END_DAY)
			              )
			where rNUM >= #{start} and rNUM <= #{end}
			]]>
		</if>
		
		<if test='ADJUSTABLE != 1'>
			<![CDATA[
			select * 
			from
			(select ts_cd, ta_cd, ts_area, ts1_no, ts1_fee, ts2_no, ts2_fee, ts3_no, ts3_fee, ts4_no, ts4_fee, start_day, end_day, ADJUSTABLE, TA_TITLE, TA_APPEAL, TA_IMG, CUST_NM, ROWNUM rNUM
			    from (select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			            and ct.CUST_ID = tt.CUST_ID
			            and ts.TS_AREA LIKE '%'||#{TQ_LOC}||'%'
			            and tt.TA_ST = 1
			            AND #{id} NOT IN tt.CUST_ID
			            intersect
			            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			            and ct.CUST_ID = tt.CUST_ID
			            and #{TQ_AMT} = ts.TS1_NO
			            OR #{TQ_AMT} = ts.TS2_NO
			            OR #{TQ_AMT} = ts.TS3_NO
			            OR #{TQ_AMT} = ts.TS4_NO
			            intersect
			            select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
			            from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
			            where tt.TA_CD = ts.TA_CD
			              and ct.CUST_ID = tt.CUST_ID
			              and #{START_DAY} between ts.START_DAY and ts.END_DAY
			              and #{END_DAY} between ts.START_DAY and ts.END_DAY)
			              )
			where rNUM >= #{start} and rNUM <= #{end}
			]]>
		</if>
	</select>
	
	<!-- 훈련사 상세정보 -->
	<select id="TrainerDetail" parameterType="String" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		select * 
		from (select t.TA_CD,t.CUST_ID,t.TA_TITLE,t.TA_APPEAL,t.TA_IMG,t.TA_ST,
		            ts.TS_AREA,ts.TS1_NO,ts.TS1_FEE,ts.TS2_NO,ts.TS2_FEE,ts.TS3_NO,ts.TS3_FEE,ts.TS4_NO,ts.TS4_FEE,ts.START_DAY,ts.END_DAY,ts.ADJUSTABLE
		       from TRAINER_TB t ,TRAINER_SERVICE_TB ts
		      where ts.TA_CD = t.TA_CD
		     )
		where CUST_ID = #{CUST_ID}
	</select>
	
	<!-- 훈련사 수정 처리 - 훈련사프로필 update-->
	<update id="updateTrainer1" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		update TRAINER_TB
		set TA_TITLE = #{TA_TITLE}, TA_APPEAL = #{TA_APPEAL}, TA_IMG = #{TA_IMG}, TA_ST = #{TA_ST}
		where CUST_ID = #{CUST_ID}
	</update>
	
	<!-- 훈련사 수정 처리 - 훈련사 서비스정보 update-->
	<update id="updateTrainer2" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		update TRAINER_SERVICE_TB
		set	TS_AREA = #{TS_AREA}, TS1_NO = #{TS1_NO}, TS1_FEE = #{TS1_FEE}, TS2_NO = #{TS2_NO}, TS2_FEE = #{TS2_FEE}, 
				TS3_NO = #{TS3_NO}, TS3_FEE = #{TS3_FEE}, TS4_NO = #{TS4_NO}, TS4_FEE = #{TS4_FEE}, START_DAY = #{START_DAY}, 
				END_DAY = #{END_DAY}, ADJUSTABLE = #{ADJUSTABLE}
		where TA_CD = #{TA_CD}
	</update>
	
	<!-- 훈련사 탈퇴 (TRAINER_TB) -->
	<delete id="deleteTrainer" parameterType="int">
		delete from TRAINER_TB where TA_CD = #{TA_CD}
	</delete>
	
	<!-- 훈련사 탈퇴 (TRAINER_SERVICE_TB) -->
	<delete id="deleteTrainer2" parameterType="int">
		delete from TRAINER_SERVICE_TB where TA_CD = #{TA_CD}
	</delete>
	
	<!-- 훈련사 상세 정보 -->
	<select id="trainerInfo" parameterType="int" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
	    select ts.*, tt.TA_TITLE, tt.TA_APPEAL, tt.TA_IMG, ct.CUST_NM
	    from TRAINER_SERVICE_TB ts, TRAINER_TB tt, CUSTOMER_TB ct
	    where tt.TA_CD = ts.TA_CD
	    and ct.CUST_ID = tt.CUST_ID
	    and tt.TA_CD = #{TA_CD}
	</select>
	
	<!-- 펫 정보 가져오기(이름, 펫코드) -->
	<select id="getPetInfo" parameterType="String" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		select pt.PET_NM, pt.PET_CD
		from PET_TB pt, CUSTOMER_TB ct
		where ct.CUST_ID = pt.CUST_ID
		and ct.CUST_ID = #{id}
	</select>
	
	<!-- 의뢰인의 펫 마릿수 가져오기 -->
	<select id="getPetCount" parameterType="String" resultType="int">
		select Count(*)
		from PET_TB
		where CUST_ID = #{id}
	</select>
	
	<!-- 훈련 예약 - 훈련요청테이블에 등록 -->
	<insert id="insertTrainerReservation" parameterType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		insert into TRAINER_REQUEST_TB(TQ_CD, CUST_ID, TA_CD, PET_NM, TQ_AMT, TQ_LOC, TQ_ST, START_DAY, END_DAY, TQ_FEE, TQ_DT)
		values(TQ_CD_seq.nextval, #{CUST_ID}, #{TA_CD}, #{PET_NM}, #{TQ_AMT}, #{TQ_LOC}, 0, #{START_DAY}, #{START_DAY}, #{TQ_FEE}, sysdate)
	</insert>
	
	<!-- 훈련사에게 온 훈련대기중인 리스트 건수 -->
	<select id="TraineeListCnt" parameterType="String" resultType="int">
		select count(*)
		from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		where tt.TA_CD = tr.TA_CD
		and tr.TQ_ST = 0
		and tt.CUST_ID = #{id}
	</select>
	
	<!-- 훈련 대기중인 리스트 -->
	<select id="TraineeList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select tq_cd, cust_id, ta_cd, pet_nm, tq_amt, tq_loc, tq_st, start_day, end_day, tq_fee, tq_dt, rownum rNum
		        from(select distinct tr.*
		            from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		            where tt.TA_CD = tr.TA_CD
		            and tt.CUST_ID = #{id}
		            and tr.TQ_ST = 0
		            order by TQ_DT))
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 훈련 거절 처리 -->
	<update id="updateDenyTraining" parameterType="int">
		update TRAINER_REQUEST_TB set TQ_ST = 2 where TQ_CD = #{TQ_CD}
	</update>
	
	<!-- 훈련 수락 처리 -->
	<update id="updateAcceptTraining">
		update TRAINER_REQUEST_TB set TQ_ST = 1 where TQ_CD = #{TQ_CD}
	</update>
	
	<!-- 훈련사에게 온 훈련 수락 리스트 건수 -->
	<select id="acceptTraineeListCnt" parameterType="String" resultType="int">
		select count(*)
		from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		where tt.TA_CD = tr.TA_CD
		and tr.TQ_ST = 1
		and tt.CUST_ID = #{id}
	</select>
	
	<!-- 훈련사에게 온 훈련 수락 리스트 -->
	<select id="acceptTraineeList" parameterType="java.util.Map" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		         from (select distinct tr.*
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		                where tt.TA_CD = tr.TA_CD
		                and tt.CUST_ID = #{id}
		                and tr.TQ_ST = 1
		                order by TQ_DT) cu)
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 훈련사에게 온 훈련거절 리스트 건수 -->
	<select id="denyTraineeListCnt" parameterType="String" resultType="int">
		select count(*)
		from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		where tt.TA_CD = tr.TA_CD
		and tr.TQ_ST = 2
		and tt.CUST_ID = #{id}
	</select>
	
	<!-- 훈련사에게 온 훈련 거절 리스트 -->
	<select id="denyTraineeList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		         from (select distinct tr.*
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		                where tt.TA_CD = tr.TA_CD
		                and tt.CUST_ID = #{id}
		                and tr.TQ_ST = 2
		                order by TQ_DT) cu)
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 훈련사 매칭 완료 리스트 건수 -->
	<select id="TrainingServiceCompleteCnt" resultType="int">
		select count(*)
		from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		where tt.TA_CD = tr.TA_CD
		and tr.TQ_ST = 4
		and tt.CUST_ID = #{id}
	</select>
	
	<!-- 훈련사 매칭완료 리스트 -->
	<select id="TrainingServiceCompleteList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		         from (select distinct tr.*
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		                where tt.TA_CD = tr.TA_CD
		                and tt.CUST_ID = #{id}
		                and tr.TQ_ST = 4
		                order by TQ_DT) cu)
		where rNum >= #{start} and rNum <= ${end}
		]]>
	</select>
	
	<!-- 고객용 훈련요청 결과 리스트 건수(대기중일때) -->
	<select id="custReqResultwaitCnt" resultType="int">
		select count(*) 
		from TRAINER_REQUEST_TB 
		where CUST_ID= #{id}
		and TQ_ST = 0
	</select>
	
	<!-- 고객용 훈련요청 결과 리스트(대기중일때) -->
	<select id="custReqResultwaitList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		        from (select tr.*, ct.cust_nm
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt, CUSTOMER_TB ct
		                where tr.TA_CD = tt.TA_CD
		                and tt.CUST_ID = ct.CUST_ID
		                and tr.CUST_ID = #{id}
		                and tr.TQ_ST = 0) cu
		        )
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 훈련 예약 취소 -->
	<delete id="deleteReservation" parameterType="int">
		delete from TRAINER_REQUEST_TB where TQ_CD = #{TQ_CD}
	</delete>
	
	<!-- 고객용 훈련요청결과 리스트 건수(수락일때) -->
	<select id="custReqResultacceptCnt" resultType="int">
		select count(*) 
		from TRAINER_REQUEST_TB 
		where CUST_ID= #{id}
		and TQ_ST = 1
		or TQ_ST = 3
	</select>
	
	<!-- 고객용 훈련요청 결과 리스트(수락일때) -->
	<select id="custReqResultacceptList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select distinct cu.*, rownum rNum
		        from (select distinct tr.*
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt
		                where tr.TA_CD = tt.TA_CD
		                and tt.CUST_ID = #{id}
		                and tr.TQ_ST = 1
		                or tr.TQ_ST = 3) cu)
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 고객용 훈련요청결과 리스트 건수(거절일때) -->
	<select id="custReqResultdenyCnt" resultType="int">
		select count(*) 
		from TRAINER_REQUEST_TB 
		where CUST_ID= #{id}
		and TQ_ST = 2
	</select>
	
	<!-- 고객용 훈련요청 결과 리스트(거절일때) -->
	<select id="custReqResultdenyList" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		        from (select tr.*, ct.cust_nm
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt, CUSTOMER_TB ct
		                where tr.TA_CD = tt.TA_CD
		                and tt.CUST_ID = ct.CUST_ID
		                and tr.CUST_ID = #{id}
		                and TQ_ST = 2) cu)
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 고객용 훈련완료 리스트 건수 -->
	<select id="trainingCompleteCnt" resultType="int">
		select count(*) 
		from TRAINER_REQUEST_TB 
		where CUST_ID= #{id}
		and TQ_ST = 4
	</select>
	
	<!-- 고객용 훈련완료 리스트 -->
	<select id="trainingComplete" resultType="ptms.mvc.tpj.CustVO.TrainerRequestVO">
		<![CDATA[
		select * from
		        (select cu.*, rownum rNum
		        from (select tr.*, ct.cust_nm
		                from TRAINER_REQUEST_TB tr, TRAINER_TB tt, CUSTOMER_TB ct
		                where tr.TA_CD = tt.TA_CD
		                and tt.CUST_ID = ct.CUST_ID
		                and tr.CUST_ID = #{id}
		                and tr.TQ_ST = 4) cu)
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<!-- 훈련사 후기 작성 -->
	<insert id="insertTrainingReview" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		insert into TRAINER_GRADE_TB(TG_CD, CUST_ID, TG_ID, TQ_CD, TG_GRADE, TG_CON, TG_IMG, TG_DT)
		values(TG_CD_seq.nextval, #{CUST_ID}, #{TG_ID}, #{TQ_CD}, #{TG_GRADE}, #{TG_CON}, #{TG_IMG}, sysdate)
	</insert>
	
	<!-- 훈련사 후기 작성 중복체크 -->
	<select id="reviewCheckCnt" resultType="int">
		select count(*) as cnt
		from TRAINER_GRADE_TB
		where tq_cd = #{TQ_CD}
	</select>
	
	<select id="reviewCnt" resultType="int">
		select count(*) from TRAINER_GRADE_TB where TG_ID = #{TA_CD}
	</select>
	
	<select id="getReviewInfo" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		<![CDATA[
		select * 
		from TRAINER_GRADE_TB
		where TG_ID = #{TA_CD}
		and rowNum >= 1 and rownum <= 3
		]]>
	</select>
	
	<select id="trainerDupChk" resultType="int">
		SELECT COUNT(*)
		FROM TRAINER_TB
		WHERE CUST_ID = #{id}
	</select>
	
	<update id="updateTrainingComplete">
		update TRAINER_REQUEST_TB set TQ_ST = 4 where TQ_CD = #{TQ_CD}
	</update>
	
	<!-- 후기 미리보기 평점순 훈련사 정렬 -->
	<!-- <select id="previewTrainingGrade" resultType="List<ptms.mvc.tpj.CustVO.TrainerVO>">
		select tg.*, tt.*, ct.cust_nm, ts.TS_AREA
		from (select tg.TG_ID, nvl(count(TG_CD),0) tg_count, nvl(avg(TG_GRADE),0) tg_avg
		        from TRAINER_GRADE_TB tg
		        group by TG_ID
		        order by nvl(avg(TG_GRADE),0) desc) tg
		full outer join TRAINER_TB tt
		on tg.TG_ID = tt.TA_CD
		full outer join CUSTOMER_TB ct
		on ct.cust_id = tt.cust_id
		full outer join TRAINER_SERVICE_TB ts
		on tt.ta_cd = ts.ta_cd
		where tt.ta_st = 1
	</select> -->
	
	<!-- 후기 미리보기 최신등록순 훈련사 정렬 -->
	<!-- <select id="newTrainerList" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		select tg.*, tt.*, ct.cust_nm, ts.TS_AREA
		from (select tg.TG_ID, count(TG_CD) tg_count, avg(TG_GRADE) tg_avg
		        from TRAINER_GRADE_TB tg
		        group by TG_ID) tg 
		full outer join TRAINER_TB tt
		on tg.TG_ID = tt.TA_CD
		full outer join CUSTOMER_TB ct
		on ct.cust_id = tt.cust_id
		full outer join TRAINER_SERVICE_TB ts
		on tt.ta_cd = ts.ta_cd
		where tt.ta_st = 1
		order by tt.ta_dt desc
	</select> -->
	
	<!-- 고객 - 결제 완료 후 요청 테이블 상태 업데이트  -->
	<update id="updatePay" parameterType="int">
		UPDATE TRAINER_REQUEST_TB SET SQ_ST = 3 WHERE TQ_CD = #{TQ_CD}
	</update>
	
	<select id="getTrainerCalendar" resultType="String">
		select start_day
		from TRAINER_REQUEST_TB
		where TA_CD = #{TA_CD}
		and TQ_ST = 1
		or TQ_ST = 3
	</select>
	
	<select id="getIDreviewCnt" resultType="int">
		select count(*)
		from TRAINER_GRADE_TB
		where cust_id = #{id}
	</select>
	
	<select id="getIDreviewInfo" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		<![CDATA[
		select * from
		    (select tg_cd, tg_grade, tg_con, tg_img, pet_nm, tq_amt, tq_fee, start_day, rownum rNum
		    from(select tg_cd, tg_grade, tg_con, tg_img, pet_nm, tq_amt, tq_fee, start_day
		            from TRAINER_GRADE_TB tg, TRAINER_REQUEST_TB tr
		            where tg.tq_cd = tr.tq_cd
		            and tg.cust_id = #{id}))
		where rNum >= #{start} and rNum <= #{end}
		]]>
	</select>
	
	<select id="ModifyInfo" resultType="ptms.mvc.tpj.CustVO.TrainerVO">
		select * from TRAINER_GRADE_TB where TG_CD = #{TG_CD}
	</select>
	
	<update id="modifyReviewAction" parameterType="ptms.mvc.tpj.CustVO.TrainerVO">
		update TRAINER_GRADE_TB 
		set TG_GRADE = #{TG_GRADE}, TG_CON = #{TG_CON}, TG_IMG = #{TG_IMG}
		where TG_CD = #{TG_CD}
	</update>
	
	<select id="trainerChkCnt" resultType="int">
		select count(*) 
		from TRAINER_TB
		where CUST_ID = #{id}
	</select>
</mapper>