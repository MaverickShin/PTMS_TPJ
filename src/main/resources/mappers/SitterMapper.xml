<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ptms.mvc.tpj.Sitter_DAO.SitterDAO">
   
   <!-- 시터 상세 조회 페이지 -->
   <select id="detailSitter" parameterType="int" resultType="ptms.mvc.tpj.CustVO.SitterVO">
      SELECT SIT_TITLE, SIT_APPEAL, SIT_IMG
      FROM SITTERS_TB
      WHERE SIT_ID=#{SIT_ID}
   </select>
   
   <!-- 고객 펫 수 -->
   <select id="MypetCount" parameterType="String" resultType="int">
      SELECT COUNT(*)
      FROM PET_TB
      WHERE CUST_ID=#{CUST_ID}
   </select>
   
   <!-- 시터 수정 상세 페이지 -->
   <select id="SitterDetail" parameterType="String" resultType="ptms.mvc.tpj.CustVO.SitterVO">
		select *
		from (select st.SIT_ID, st.CUST_ID, st.SIT_TITLE, st.SIT_APPEAL, st.SIT_IMG, st.SIT_ST,
		            ss.SV_AREA, ss.SV1_NO, ss.SV2_NO, ss.SV3_NO, ss.SV4_NO, ss.WK_START, ss.WK_END
		        from SITTERS_TB st, SITTER_SERVICE_TB ss
		        where st.SIT_ID = ss.SIT_ID
		     )
		where CUST_ID = #{CUST_ID}
   </select>
   
   <!-- 시터 수정 처리 - 훈련사 프로필 update -->
   <update id="updateSitter1" parameterType="ptms.mvc.tpj.CustVO.SitterVO">
   		update SITTERS_TB
   		set SIT_TITLE = #{SIT_TITLE}, SIT_APPEAL = #{SIT_APPEAL}, SIT_IMG = #{SIT_IMG}, SIT_ST = #{SIT_ST}
   		where CUST_ID = #{CUST_ID}
   </update>
   
   <!-- 시터 수정 처리 - 훈련사 서비스정보 update -->
   <update id="updateSitter2" parameterType="ptms.mvc.tpj.CustVO.SitterVO">
   		update SITTER_SERVICE_TB
   		set SV_AREA = #{SV_AREA}, SV1_NO = #{SV1_NO}, SV2_NO = #{SV2_NO}, SV3_NO = #{SV3_NO}
   			, SV4_NO = #{SV4_NO}, WK_START = #{WK_START}, WK_END = #{WK_END}
   		where SIT_ID = #{SIT_ID}
   </update>
   
   <!-- 시터 탈퇴 1. deleteSitter -->
   <delete id="deleteSitter" parameterType="int">
   		delete from SITTERS_TB where SIT_ID = #{SIT_ID}
   </delete>
   
   <!-- 시터 탈퇴 2. deleteSitter2 -->
   <delete id="deleteSitter2" parameterType="int">
   		delete from SITTER_SERVICE_TB where SIT_ID = #{SIT_ID}
   </delete>
   
	<!-- 요금표 리스트 -->
	<select id="getPriceList" resultType="ptms.mvc.tpj.CustVO.PetVO">
		SELECT p.PK_CD, p.PK_KIND, p.PK_DETAIL, s.SF_FEE
		FROM PET_KIND_TB p , SITTER_FEE_TB s
		WHERE p.PK_CD = s.PK_CD
	</select>
	
	<!-- 시터 프로필 등록 -->
	<insert id="profileInsert" parameterType="ptms.mvc.tpj.CustVO.SitterVO">
		INSERT INTO SITTERS_TB(SIT_ID,CUST_ID,SR_CD,SIT_TITLE,SIT_APPEAL,SIT_ST,SIT_DT,SIT_IMG)
		VALUES(SIT_IDSQE.nextval,#{CUST_ID},#{SR_CD},#{SIT_TITLE}, #{SIT_APPEAL},1,sysdate,#{SIT_IMG})
	</insert>
	
	<!-- 시터 서비스 정보 등록 -->
	<insert id="insertService" parameterType="ptms.mvc.tpj.CustVO.SitterVO">
		INSERT INTO SITTER_SERVICE_TB(SV_CD,SIT_ID,SV_AREA,SV1_NO,SV2_NO,SV3_NO,SV4_NO,WK_START,WK_END)
		VALUES(SV_CDSEQ.nextval, SIT_IDSQE.currval,#{SV_AREA},#{SV1_NO},#{SV2_NO},#{SV3_NO},#{SV4_NO},#{WK_START},#{WK_END})
	</insert>
	
	<!-- 펫시터 찾기 -(조건에 맞는) 시터 수 구하기 -->
	<select id="getSitterCnt" parameterType="ptms.mvc.tpj.CustVO.SitterVO" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT s.SIT_ID 
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND ser.SV_AREA LIKE '%'||#{SV_AREA}||'%'
	          AND s.SIT_ST = 1
	          INTERSECT
	    SELECT s.SIT_ID 
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND #{WK_START} between ser.WK_START AND ser.WK_END
	          AND #{WK_END} between ser.WK_START AND ser.WK_END
	          INTERSECT
		SELECT s.SIT_ID
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND ser.SV1_NO >= #{SV1_NO}
	          AND ser.SV2_NO >= #{SV2_NO}
			  AND ser.SV3_NO >= #{SV3_NO}
			  AND ser.SV4_NO >= #{SV4_NO}
			 )
	</select>	
	
	<!-- 펫시터 찾기 - 리스트 출력  -->
	<select id="activityList" parameterType="ptms.mvc.tpj.CustVO.SitterVO" resultType="ptms.mvc.tpj.CustVO.SitterVO">
	  <![CDATA[
		SELECT s.SIT_ID, s.SIT_TITLE, s.SIT_APPEAL, s.SIT_IMG, c.CUST_NM
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser, CUSTOMER_TB c
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND s.CUST_ID = c.CUST_ID
	          AND ser.SV_AREA LIKE '%'||#{SV_AREA}||'%'
	          AND s.SIT_ST = 1
	          INTERSECT
		SELECT s.SIT_ID, s.SIT_TITLE, s.SIT_APPEAL, s.SIT_IMG, c.CUST_NM
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser, CUSTOMER_TB c
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND s.CUST_ID = c.CUST_ID
	          AND #{WK_START} between ser.WK_START AND ser.WK_END
	          AND #{WK_END} between ser.WK_START AND ser.WK_END
	          INTERSECT
		SELECT s.SIT_ID, s.SIT_TITLE, s.SIT_APPEAL, s.SIT_IMG, c.CUST_NM
	          FROM SITTERS_TB s, SITTER_SERVICE_TB ser, CUSTOMER_TB c
	          WHERE s.SIT_ID = ser.SIT_ID
	          AND s.CUST_ID = c.CUST_ID
	          AND ser.SV1_NO >= #{SV1_NO}
	          AND ser.SV2_NO >= #{SV2_NO}
			  AND ser.SV3_NO >= #{SV3_NO}
			  AND ser.SV4_NO >= #{SV4_NO}		
	   ]]>		  	  
	</select>
	
	<!-- 고객 펫 조회 -->
	<select id="MypetList" parameterType="String" resultType="ptms.mvc.tpj.CustVO.PetVO">
		SELECT p.PET_NM, p.PK_CD
		FROM PET_TB p, CUSTOMER_TB c
		WHERE c.CUST_ID = p.CUST_ID
		AND c.CUST_ID=#{CUST_ID}
	</select>
	
	<!-- 펫시팅 신청하기 - 요청테이블에 insert -->
 	<insert id="selectRequestInsert" parameterType="ptms.mvc.tpj.CustVO.SitterVO">
		INSERT INTO SITTER_REQUEST_TB(SQ_CD,CUST_ID,SIT_ID,SQ_AMT,SQ_LOC,SQ_ST,START_DAY,END_DAY,SQ_DT,REQ_SV)
		VALUES(SQ_CDSEQ.nextval,#{CUST_ID},#{SIT_ID},#{SQ_AMT},#{SQ_LOC},0,#{START_DAY},#{END_DAY},sysdate,#{REQ_SV})
	</insert> 
	
	<!-- 시터 의뢰 목록 수 구하기 (나에게온 의뢰) -->
	<select id="getRequestList" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND req.SQ_ST =0
	</select>
	
	<!-- 지정 시터 의뢰 목록 (나에게온 의뢰) -->
	<select id="selectRequestList" parameterType="String" resultType="ptms.mvc.tpj.CustVO.SitterVO">
		SELECT req.*
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND req.SQ_ST =0
	</select>
	
	<!-- 시터 - 고객 의뢰 수락 수 구하기 -->
	<select id="getsitterAcceptCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND req.SQ_ST =1
	</select>
	
	
	<!-- 시터 - 고객 의뢰 수락 (SQ_ST[처리상태]를 1로 업데이트) -->
	<update id="sitterAccept" parameterType="int">
		UPDATE SITTER_REQUEST_TB
		SET SQ_ST=1
		WHERE SQ_CD=#{SQ_CD}
	</update>
	
	<!-- 시터 - 고객 의뢰 수락 리스트	 -->
	<select id="sitterAcceptList" parameterType="String" resultType="ptms.mvc.tpj.CustVO.SitterVO">
		SELECT req.*
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND SQ_ST=1
	</select>
	
	<!-- 시터 - 고객 의뢰 거절 수 구하기 -->
	<select id="getsitterRefuseCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND req.SQ_ST =2
	</select>
		
	<!-- 시터 - 고객의뢰 거절 (SQ_ST[처리상태] 를 2로 업데이트) -->
	<update id="sitterRefuse" parameterType="int">
	UPDATE SITTER_REQUEST_TB
	SET SQ_ST=2
	WHERE SQ_CD=#{SQ_CD}
	</update>
	
	<!-- 시터 - 고객 의뢰 거절 리스트	 -->
	<select id="sitterRefuseList" parameterType="String" resultType="ptms.mvc.tpj.CustVO.SitterVO">
		SELECT req.*
		FROM SITTER_REQUEST_TB req, SITTERS_TB s
		WHERE s.CUST_ID =#{CUST_ID}
		AND req.SIT_ID = s.SIT_ID
		AND SQ_ST=2
	</select>
</mapper>    